Q : Reverse an array : 
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int main()
{
    vector<int> v;
    v.push_back(5);
    v.push_back(6);
    v.push_back(7); 
    v.push_back(8);
    v.push_back(9);
     int n=v.size();
     int m=2;
    int s=m+1;
    int e=n-1;
   while(s<=e)
    {
        swap(v[s],v[e]);
        s++;
        e--;
    }
    for(auto i:v)
    {
        cout<<i<<" ";
    }
 return 0;
}
Q : Merge sorted array :
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        for(int i=m+1;i<m+n+1;i++)
        {
            nums1[i-1]=nums2[i-m-1];
        }
        sort(nums1.begin(),nums1.end());
        for(int i=0;i<m+n;i++)
        {
            cout<<nums1[i]<<" ";
        }
    }
int main()
{
    vector <int> arr1;
    arr1={2,3,7};
    vector <int> arr2;
    arr2={1,5,9};
    merge(arr1,3,arr2,3);
    
    return 0;
}
Or 

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void merge(vector<int>& nums1, int m, vector<int>& nums2, int n,vector<int>& nums3, int t) {
    int i=0,j=0;
    int k=0;
   while(i<m && j<n)
   {
       if(nums1[i]<nums2[j])
       {
           nums3[k++]=nums1[i++];
       }
       else{
           nums3[k++]=nums2[j++];
       }
   }
    while(i<m)
   {
           nums3[k++]=nums1[i++];
   }
    while(j<n)
   {
           nums3[k++]=nums2[j++];
   }
    // for(int i=0;i<t;i++)
    //     {
    //         cout<<nums3[i]<<" ";
    //     }
    //     cout<<endl;
    }
    void print(vector<int>& nums3, int m)
    {
        for(int i=0;i<m;i++)
        {
            cout<<nums3[i]<<" ";
        }
    }
int main()
{
    vector <int> arr1;
    arr1={2,3,7};
    vector <int> arr2;
    arr2={1,5,9};
    vector <int> arr3(6,0);
    merge(arr1,3,arr2,3,arr3,6);
    print(arr3,6);
    return 0;
}
Q : Check if Array is sorted and rotated :
#include <bits/stdc++.h>
using namespace std;

 bool check(vector<int>& nums) {
        vector<int> temps;
        int n=nums.size();
        for(int i=1;i<=n;i++)
        {
            temps=nums;
            sort(temps.begin(),temps.end());
            rotate(temps.begin(),temps.begin()+i,temps.end());
            for(auto i:temps)
            {
                cout<<i<<" ";
            }
            cout<<endl;
            if(temps==nums)
            {
                return true;
            }
        }
        return false;
    }
    
int main()
{
    vector<int> v;
    v={2,1,3,4};
    bool b=check(v);
    cout<<b;
    return 0;
}